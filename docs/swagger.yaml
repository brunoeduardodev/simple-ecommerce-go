definitions:
  controllers.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  repositories.CreateUserInput:
    properties:
      email:
        type: string
      name:
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  services.CreateProductInput:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  views.Product:
    description: Information of a product
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      string:
        description: Created at here
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:4000
info:
  contact:
    name: Bruno
    url: https://github.com/brunoeduardodev
  description: Project to study golang
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Simple Ecommerce Go
  version: "1.0"
paths:
  /products:
    get:
      description: List all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/views.Product'
            type: array
      summary: List all products
    post:
      description: Create a new product
      parameters:
      - description: New product input
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services.CreateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Product
  /sign-in:
    post:
      description: Does a sign in
      parameters:
      - description: Sign In input
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SignInInput'
      produces:
      - application/json
      responses: {}
      summary: Does a sign in
  /sign-up:
    post:
      description: Does a sign up
      parameters:
      - description: Sign up input
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/repositories.CreateUserInput'
      produces:
      - application/json
      responses: {}
      summary: Does a sign up
securityDefinitions:
  "":
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
